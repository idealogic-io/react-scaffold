{
  "Scaffold": "Шаблончик",
  "Project scaffold is in build progress": "Шаблончик в процессе разработки",
  "Home": "Главная",
  "Not found Page": "Страница не существует",
  "Landing": "Лэндос",
  "Contracts Interactions": "Контрактные взаимодействия",

  "ProjectDescription": {
    "article1": "Эта ветка была отколота от базового веб3 скефолда с целью создать шаблон для еще более быстрого создания и поднятия не сложных DApp приложений.  В проекте использован набор библиотек Rainbow-kit, wagmi и viem, которые \"с коробки\" полностью берут на себя управление и хендлинг всех вопросов связанных с подключением приложения к сети веб3, чтением и записью данными в сети веб3, мультиколами и многими другими функциями. ",
    "article2": "Из минусов данного подхода то что очень сложно кастомизировать логику взаимодейвия с блокчейном, если проект требует каких либо нестандартных решений в этом вопросе, т.к. вся \"подкапотная\" логика находится на стороне библиотек. Поэтому при создании больших и сложных DApp, требующих таких же сложных и не стандартных решений использовать этот скефолд не рекомендуется, в связи со сложностями кастомизации.",
    "article3": "Данный скефолд отлично подходит для мелких DApp с несложной логикой и позволяет максимально сократить time-to-market и время работы разработчика."
  },

  "WalletButton": {
    "connect": "Подключить кошелек",
    "unsupported": "Сеть не поддерживается"
  },

  "SignInButton": {
    "signIn": "Войти"
  },

  "ContractReadExample": {
    "tokenBalance": "Твой баланс {{tokenName}} токена: <bold>{{balance}} {{tokenSymbol}}</bold>",
    "article1": "В этой секции рассмотрен простейший точечный забор данных с блокчейна и смарт-контрактов при помощи хуков предоставляемых вагми. Абсолютно ничего сложного. Все подробности работы с хуком по чтению данных со смарт-контракта хорошо описаны в документации вагми (см. ссылку на лендосе). Стоит обратить внимание на параметр \"watch\", который позволяет обновлять данные в реальном времени по мере появления нового блока в сети. Если же обновление в реальном времени не нужно, то этот параметр можно убрать для более оптимального потребления ресурсов. Так же стоит обратить внимание что все числовые данные получаемые со смарт-контракта которые ты планируешь использовать в каких либо вычеслениях крайне рекомендуется оборачивать в Bignumber.js для последующего удобства работы с ними."
  }
}
